#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 7.6
#  in conjunction with Tcl version 8.6
#    Apr 01, 2023 04:31:17 PM IST  platform: Windows NT

import dbs_support
import sys
import tkinter as tk
import tkinter.ttk as ttk
import tkinter.messagebox as tkMessageBox
from tkinter.constants import *
import mysql.connector
import os.path


_script = sys.argv[0]
_location = os.path.dirname(_script)


_bgcolor = '#d9d9d9'  # X11 color: 'gray85'
_fgcolor = '#000000'  # X11 color: 'black'
_compcolor = 'gray40'  # X11 color: #666666
_ana1color = '#c3c3c3'  # Closest X11 color: 'gray76'
_ana2color = 'beige'  # X11 color: #f5f5dc
_tabfg1 = 'black'
_tabfg2 = 'black'
_tabbg1 = 'grey75'
_tabbg2 = 'grey89'
_bgmode = 'light'


class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        
             
        top.geometry("600x450+545+294")
        top.minsize(120, 1)
        top.maxsize(1540, 845)
        top.resizable(1,  1)
        top.title("Fest Management System")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.top = top

        self.Admin = tk.Button(self.top)
        self.Admin.place(relx=0.2, rely=0.311, height=54, width=137)
        self.Admin.configure(activebackground="beige")
        self.Admin.configure(activeforeground="black")
        self.Admin.configure(background="#d9d9d9")
        self.Admin.configure(compound='left')
        self.Admin.configure(disabledforeground="#a3a3a3")
        self.Admin.configure(foreground="#000000")
        self.Admin.configure(highlightbackground="#d9d9d9")
        self.Admin.configure(highlightcolor="black")
        self.Admin.configure(pady="0")
        self.Admin.configure(text='''Admin''')
        self.Admin.configure(command=self.new_admin_window)
        self.User = tk.Button(self.top)
        self.User.place(relx=0.6, rely=0.311, height=54, width=137)
        self.User.configure(activebackground="beige")
        self.User.configure(activeforeground="black")
        self.User.configure(background="#d9d9d9")
        self.User.configure(compound='left')
        self.User.configure(disabledforeground="#a3a3a3")
        self.User.configure(foreground="#000000")
        self.User.configure(highlightbackground="#d9d9d9")
        self.User.configure(highlightcolor="black")
        self.User.configure(pady="0")
        self.User.configure(command=self.new_user_window)
        self.User.configure(text='''User''')

    def new_admin_window(self):
        global _top2, _w2
        _top2 = tk.Toplevel(dbs_support.root)
        _w2 = Toplevel2(_top2)

    def new_user_window(self):
        global _top10, _w10
        _top10 = tk.Toplevel(dbs_support.root)
        _w10 = Toplevel3(_top10)


class Toplevel2:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("600x450+689+279")
        top.minsize(120, 1)
        top.maxsize(1540, 845)
        top.resizable(1,  1)
        top.title("Admin panel")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.top = top

        self.Close_admin = tk.Button(self.top)
        self.Close_admin.place(relx=0.883, rely=0.911, height=24, width=47)
        self.Close_admin.configure(activebackground="beige")
        self.Close_admin.configure(activeforeground="black")
        self.Close_admin.configure(background="#d9d9d9")
        self.Close_admin.configure(compound='left')
        self.Close_admin.configure(disabledforeground="#a3a3a3")
        self.Close_admin.configure(foreground="#000000")
        self.Close_admin.configure(highlightbackground="#d9d9d9")
        self.Close_admin.configure(highlightcolor="black")
        self.Close_admin.configure(pady="0")
        self.Close_admin.configure(command=self.top.destroy)
        self.Close_admin.configure(text='''Close''')
        self.event = tk.Button(self.top)
        self.event.place(relx=0.45, rely=0.222, height=44, width=107)
        self.event.configure(activebackground="beige")
        self.event.configure(activeforeground="black")
        self.event.configure(background="#d9d9d9")
        self.event.configure(compound='left')
        self.event.configure(disabledforeground="#a3a3a3")
        self.event.configure(foreground="#000000")
        self.event.configure(highlightbackground="#d9d9d9")
        self.event.configure(highlightcolor="black")
        self.event.configure(command=self.new_event_window)
        self.event.configure(pady="0")
        self.event.configure(text='''Event''')
        self.sponsors = tk.Button(self.top)
        self.sponsors.place(relx=0.45, rely=0.378, height=44, width=107)
        self.sponsors.configure(activebackground="beige")
        self.sponsors.configure(activeforeground="black")
        self.sponsors.configure(background="#d9d9d9")
        self.sponsors.configure(compound='left')
        self.sponsors.configure(disabledforeground="#a3a3a3")
        self.sponsors.configure(foreground="#000000")
        self.sponsors.configure(highlightbackground="#d9d9d9")
        self.sponsors.configure(highlightcolor="black")
        self.sponsors.configure(pady="0")
        self.sponsors.configure(command=self.new_sponsor_window)

        self.sponsors.configure(text='''Sponsors''')
        self.Vendors = tk.Button(self.top)
        self.Vendors.place(relx=0.45, rely=0.533, height=44, width=107)
        self.Vendors.configure(activebackground="beige")
        self.Vendors.configure(activeforeground="black")
        self.Vendors.configure(background="#d9d9d9")
        self.Vendors.configure(compound='left')
        self.Vendors.configure(disabledforeground="#a3a3a3")
        self.Vendors.configure(foreground="#000000")
        self.Vendors.configure(highlightbackground="#d9d9d9")
        self.Vendors.configure(highlightcolor="black")
        self.Vendors.configure(pady="0")
        self.Vendors.configure(text='''Vendors''')
        self.Vendors.configure(command=self.new_vendor_window)

        self.menubar = tk.Menu(top, font="TkMenuFont",
                               bg=_bgcolor, fg=_fgcolor)
        top.configure(menu=self.menubar)

        self.performer = tk.Button(self.top)
        self.performer.place(relx=0.45, rely=0.689, height=44, width=107)
        self.performer.configure(activebackground="beige")
        self.performer.configure(activeforeground="black")
        self.performer.configure(background="#d9d9d9")
        self.performer.configure(compound='left')
        self.performer.configure(disabledforeground="#a3a3a3")
        self.performer.configure(foreground="#000000")
        self.performer.configure(highlightbackground="#d9d9d9")
        self.performer.configure(highlightcolor="black")
        self.performer.configure(command=self.new_performer_window)

        self.performer.configure(pady="0")
        self.performer.configure(text='''Performers''')

    def new_event_window(self):
        global _top5, _w5
        _top5 = tk.Toplevel(dbs_support.root)
        _w5 = Toplevel5(_top5)

    def new_sponsor_window(self):
        global _top7, _w7
        _top7 = tk.Toplevel(dbs_support.root)
        _w7 = Toplevel5_1(_top7)

    def new_vendor_window(self):
        global _top8, _w8
        _top8 = tk.Toplevel(dbs_support.root)
        _w8 = Toplevel5_2(_top8)

    def new_performer_window(self):
        global _top9, _w9
        _top9 = tk.Toplevel(dbs_support.root)
        _w9 = Toplevel5_3(_top9)


class Toplevel5:
    def deleteEvent(self):
          selection=self.Listbox1.curselection()
          try:
            if len(selection)==0:
                tkMessageBox.showinfo("Error","Please select an event")
            else:
                index=selection[0]
                event_row=self.Listbox1.get(index)
                event_id=str(event_row[0])
                dbs_support.cursor.execute("DELETE FROM event WHERE id= '"+event_id+"' ")
                dbs_support.connc.commit()
                self.showDetails()
                tkMessageBox.showinfo("Success","Event deleted successfully")
          except Exception as e:
                tkMessageBox.showinfo("Error",e)
    def showDetails(self):
        self.Listbox1.delete(0,END)
        try:
                dbs_support.cursor.execute("SELECT * FROM event")
                dbsresponse = dbs_support.cursor.fetchall()
                self.Listbox1.insert(END,"ID Name Date Time Venue Tickets_left")
                for row in dbsresponse:
                        self.Listbox1.insert(END,row)
   
        except Exception as e:
                tkMessageBox.showinfo("Error",e)
    def addEvent(self):
        name=self.Text1.get('1.0','end-1c');
        time=self.Text2.get('1.0','end-1c');
        date=self.Text2_1.get('1.0','end-1c');
        location=self.Text3.get('1.0','end-1c');
        tickets=self.Text4.get('1.0','end-1c');
        try:
              insQuery="insert into event(name,date,time,location,tickets_left) values('" + name + "','" + date + "','" + time + "','" + location + "','" + tickets + "')"
              dbs_support.cursor.execute(insQuery)
              dbs_support.connc.commit()
              self.showDetails()
        except Exception as e:
              tkMessageBox.showerror("Error",e)
            
    
          
        
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        
        top.geometry("600x450+515+169")
        top.minsize(120, 1)
        top.maxsize(1540, 845)
        top.resizable(1,  1)
        top.title("Event add")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.top = top

        self.Frame1 = tk.Frame(self.top)
        self.Frame1.place(relx=0.033, rely=0.044,
                          relheight=0.411, relwidth=0.875)
        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")
        self.Frame1.configure(background="#d9d9d9")
        self.Frame1.configure(highlightbackground="#d9d9d9")
        self.Frame1.configure(highlightcolor="black")
        self.event_time = tk.Label(self.Frame1)
        self.event_time.place(relx=0.019, rely=0.216, height=26, width=64)
        self.event_time.configure(activebackground="#f9f9f9")
        self.event_time.configure(anchor='w')
        self.event_time.configure(background="#d9d9d9")
        self.event_time.configure(compound='left')
        self.event_time.configure(disabledforeground="#a3a3a3")
        self.event_time.configure(foreground="#000000")
        self.event_time.configure(highlightbackground="#d9d9d9")
        self.event_time.configure(highlightcolor="black")
        self.event_time.configure(text='''Event time''')
        self.Event_name = tk.Label(self.Frame1)
        self.Event_name.place(relx=0.019, rely=0.054, height=17, width=74)
        self.Event_name.configure(activebackground="#f9f9f9")
        self.Event_name.configure(anchor='w')
        self.Event_name.configure(background="#d9d9d9")
        self.Event_name.configure(compound='left')
        self.Event_name.configure(disabledforeground="#a3a3a3")
        self.Event_name.configure(foreground="#000000")
        self.Event_name.configure(highlightbackground="#d9d9d9")
        self.Event_name.configure(highlightcolor="black")
        self.Event_name.configure(text='''Event Name''')
        self.Data = tk.Label(self.Frame1)
        self.Data.place(relx=0.019, rely=0.378, height=17, width=64)
        self.Data.configure(activebackground="#f9f9f9")
        self.Data.configure(anchor='w')
        self.Data.configure(background="#d9d9d9")
        self.Data.configure(compound='left')
        self.Data.configure(disabledforeground="#a3a3a3")
        self.Data.configure(foreground="#000000")
        self.Data.configure(highlightbackground="#d9d9d9")
        self.Data.configure(highlightcolor="black")
        self.Data.configure(text='''Event Date''')
        self.Location = tk.Label(self.Frame1)
        self.Location.place(relx=0.019, rely=0.541, height=17, width=64)
        self.Location.configure(activebackground="#f9f9f9")
        self.Location.configure(anchor='w')
        self.Location.configure(background="#d9d9d9")
        self.Location.configure(compound='left')
        self.Location.configure(disabledforeground="#a3a3a3")
        self.Location.configure(foreground="#000000")
        self.Location.configure(highlightbackground="#d9d9d9")
        self.Location.configure(highlightcolor="black")
        self.Location.configure(text='''Location''')
        self.tickets = tk.Label(self.Frame1)
        self.tickets.place(relx=0.019, rely=0.703, height=26, width=74)
        self.tickets.configure(activebackground="#f9f9f9")
        self.tickets.configure(anchor='w')
        self.tickets.configure(background="#d9d9d9")
        self.tickets.configure(compound='left')
        self.tickets.configure(disabledforeground="#a3a3a3")
        self.tickets.configure(foreground="#000000")
        self.tickets.configure(highlightbackground="#d9d9d9")
        self.tickets.configure(highlightcolor="black")
        self.tickets.configure(text='''Tickets Left''')
        self.Text1 = tk.Text(self.Frame1)
        self.Text1.place(relx=0.171, rely=0.054,
                         relheight=0.13, relwidth=0.674)
        self.Text1.configure(background="white")
        self.Text1.configure(font="TkTextFont")
        self.Text1.configure(foreground="black")
        self.Text1.configure(highlightbackground="#d9d9d9")
        self.Text1.configure(highlightcolor="black")
        self.Text1.configure(insertbackground="black")
        self.Text1.configure(selectbackground="#c4c4c4")
        self.Text1.configure(selectforeground="black")
        self.Text1.configure(wrap="word")
        self.Text2 = tk.Text(self.Frame1)
        self.Text2.place(relx=0.171, rely=0.216,
                         relheight=0.13, relwidth=0.674)
        self.Text2.configure(background="white")
        self.Text2.configure(font="TkTextFont")
        self.Text2.configure(foreground="black")
        self.Text2.configure(highlightbackground="#d9d9d9")
        self.Text2.configure(highlightcolor="black")
        self.Text2.configure(insertbackground="black")
        self.Text2.configure(selectbackground="#c4c4c4")
        self.Text2.configure(selectforeground="black")
        self.Text2.configure(wrap="word")
        self.Text2_1 = tk.Text(self.Frame1)
        self.Text2_1.place(relx=0.171, rely=0.378,
                           relheight=0.13, relwidth=0.674)
        self.Text2_1.configure(background="white")
        self.Text2_1.configure(font="TkTextFont")
        self.Text2_1.configure(foreground="black")
        self.Text2_1.configure(highlightbackground="#d9d9d9")
        self.Text2_1.configure(highlightcolor="black")
        self.Text2_1.configure(insertbackground="black")
        self.Text2_1.configure(selectbackground="#c4c4c4")
        self.Text2_1.configure(selectforeground="black")
        self.Text2_1.configure(wrap="word")
        self.Text3 = tk.Text(self.Frame1)
        self.Text3.place(relx=0.171, rely=0.541,
                         relheight=0.13, relwidth=0.674)
        self.Text3.configure(background="white")
        self.Text3.configure(font="TkTextFont")
        self.Text3.configure(foreground="black")
        self.Text3.configure(highlightbackground="#d9d9d9")
        self.Text3.configure(highlightcolor="black")
        self.Text3.configure(insertbackground="black")
        self.Text3.configure(selectbackground="#c4c4c4")
        self.Text3.configure(selectforeground="black")
        self.Text3.configure(wrap="word")
        self.Text4 = tk.Text(self.Frame1)
        self.Text4.place(relx=0.171, rely=0.703,
                         relheight=0.13, relwidth=0.674)
        self.Text4.configure(background="white")
        self.Text4.configure(font="TkTextFont")
        self.Text4.configure(foreground="black")
        self.Text4.configure(highlightbackground="#d9d9d9")
        self.Text4.configure(highlightcolor="black")
        self.Text4.configure(insertbackground="black")
        self.Text4.configure(selectbackground="#c4c4c4")
        self.Text4.configure(selectforeground="black")
        self.Text4.configure(wrap="word")
        self.Button5 = tk.Button(self.top)
        self.Button5.place(relx=0.033, rely=0.489, height=24, width=47)
        self.Button5.configure(activebackground="beige")
        self.Button5.configure(activeforeground="black")
        self.Button5.configure(background="#d9d9d9")
        self.Button5.configure(compound='left')
        self.Button5.configure(disabledforeground="#a3a3a3")
        self.Button5.configure(foreground="#000000")
        self.Button5.configure(highlightbackground="#d9d9d9")
        self.Button5.configure(highlightcolor="black")
        self.Button5.configure(pady="0")
        self.Button5.configure(command= self.showDetails,text='''Show''')
        self.Button7 = tk.Button(self.top)
        self.Button7.place(relx=0.217, rely=0.489, height=24, width=47)
        self.Button7.configure(activebackground="beige")
        self.Button7.configure(activeforeground="black")
        self.Button7.configure(background="#d9d9d9")
        self.Button7.configure(compound='left')
        self.Button7.configure(disabledforeground="#a3a3a3")
        self.Button7.configure(foreground="#000000")
        self.Button7.configure(highlightbackground="#d9d9d9")
        self.Button7.configure(highlightcolor="black")
        self.Button7.configure(pady="0")
        self.Button7.configure(command=self.addEvent,text='''Add''')
        self.Button8 = tk.Button(self.top)
        self.Button8.place(relx=0.383, rely=0.489, height=24, width=47)
        self.Button8.configure(activebackground="beige")
        self.Button8.configure(activeforeground="black")
        self.Button8.configure(background="#d9d9d9")
        self.Button8.configure(compound='left')
        self.Button8.configure(disabledforeground="#a3a3a3")
        self.Button8.configure(foreground="#000000")
        self.Button8.configure(highlightbackground="#d9d9d9")
        self.Button8.configure(highlightcolor="black")
        self.Button8.configure(pady="0")
        self.Button8.configure(command=self.deleteEvent,text='''Delete''')
        self.Button9 = tk.Button(self.top)
        self.Button9.place(relx=0.917, rely=0.933, height=24, width=47)
        self.Button9.configure(activebackground="beige")
        self.Button9.configure(activeforeground="black")
        self.Button9.configure(background="#d9d9d9")
        self.Button9.configure(compound='left')
        self.Button9.configure(disabledforeground="#a3a3a3")
        self.Button9.configure(foreground="#000000")
        self.Button9.configure(highlightbackground="#d9d9d9")
        self.Button9.configure(highlightcolor="black")
        self.Button9.configure(pady="0")
        self.Button9.configure(command=self.top.destroy)
        self.Button9.configure(text='''Close''')
        self.Listbox1 = tk.Listbox(self.top)
        self.Listbox1.place(relx=0.017, rely=0.578,
                            relheight=0.404, relwidth=0.89)
        self.Listbox1.configure(background="white")
        self.Listbox1.configure(disabledforeground="#a3a3a3")
        self.Listbox1.configure(font="TkFixedFont")
        self.Listbox1.configure(foreground="#000000")


class Toplevel5_1:
    def showDetails(self):
        self.Listbox3.delete(0,END)
        try:
                dbs_support.cursor.execute("SELECT * FROM sponsors")
                dbsresponse = dbs_support.cursor.fetchall()
                self.Listbox3.insert(END,"ID Name Contributed Amount")
                for row in dbsresponse:
                        self.Listbox3.insert(END,row)
   
        except Exception as e:
                tkMessageBox.showinfo("Error",e)

    def deleteSponsor(self):
          selection=self.Listbox3.curselection()
          try:
            if len(selection)==0:
                tkMessageBox.showinfo("Error","Please select a sponsor")
            else:
                index=selection[0]
                sponsor_row=self.Listbox3.get(index)
                sponsor_id=str(sponsor_row[0])
                dbs_support.cursor.execute("DELETE FROM sponsors WHERE id= '"+sponsor_id+"' ")
                dbs_support.connc.commit()
                self.showDetails()
                tkMessageBox.showinfo("Success","Sponsor deleted successfully")
          except Exception as e:
                tkMessageBox.showinfo("Error",e)


    def addSponsor(self):
        sponsor_name=self.Text1_1.get('1.0','end-1c');
        amount_given=(self.Text2_2.get('1.0','end-1c'));
        event_name=self.Text2_1_1.get('1.0','end-1c');
        
        try:
            dbs_support.cursor.callproc('add_sponsor', (sponsor_name, amount_given, event_name))
            dbs_support.connc.commit()
            self.showDetails()
        except Exception as e:
              tkMessageBox.showerror("Error",e)

    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("600x450+590+193")
        top.minsize(120, 1)
        top.maxsize(1540, 845)
        top.resizable(1,  1)
        top.title("Sponsor Add")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.top = top

        self.Frame1_1 = tk.Frame(self.top)
        self.Frame1_1.place(relx=0.033, rely=0.044,
                            relheight=0.411, relwidth=0.875)
        self.Frame1_1.configure(relief='groove')
        self.Frame1_1.configure(borderwidth="2")
        self.Frame1_1.configure(relief="groove")
        self.Frame1_1.configure(background="#d9d9d9")
        self.Frame1_1.configure(highlightbackground="#d9d9d9")
        self.Frame1_1.configure(highlightcolor="black")
        self.event_id_1 = tk.Label(self.Frame1_1)
        self.event_id_1.place(relx=0.019, rely=0.649, height=26, width=104)
        self.event_id_1.configure(activebackground="#f9f9f9")
        self.event_id_1.configure(anchor='w')
        self.event_id_1.configure(background="#d9d9d9")
        self.event_id_1.configure(compound='left')
        self.event_id_1.configure(disabledforeground="#a3a3a3")
        self.event_id_1.configure(foreground="#000000")
        self.event_id_1.configure(highlightbackground="#d9d9d9")
        self.event_id_1.configure(highlightcolor="black")
        self.event_id_1.configure(text='''Event sponsoring''')
        self.sponsor_name = tk.Label(self.Frame1_1)
        self.sponsor_name.place(relx=0.019, rely=0.216, height=17, width=94)
        self.sponsor_name.configure(activebackground="#f9f9f9")
        self.sponsor_name.configure(anchor='w')
        self.sponsor_name.configure(background="#d9d9d9")
        self.sponsor_name.configure(compound='left')
        self.sponsor_name.configure(disabledforeground="#a3a3a3")
        self.sponsor_name.configure(foreground="#000000")
        self.sponsor_name.configure(highlightbackground="#d9d9d9")
        self.sponsor_name.configure(highlightcolor="black")
        self.sponsor_name.configure(text='''Sponsor Name''')
        self.Contribution_amount = tk.Label(self.Frame1_1)
        self.Contribution_amount.place(
            relx=0.019, rely=0.432, height=17, width=134)
        self.Contribution_amount.configure(activebackground="#f9f9f9")
        self.Contribution_amount.configure(anchor='w')
        self.Contribution_amount.configure(background="#d9d9d9")
        self.Contribution_amount.configure(compound='left')
        self.Contribution_amount.configure(disabledforeground="#a3a3a3")
        self.Contribution_amount.configure(foreground="#000000")
        self.Contribution_amount.configure(highlightbackground="#d9d9d9")
        self.Contribution_amount.configure(highlightcolor="black")
        self.Contribution_amount.configure(text='''Contribution Amount''')
        self.Text1_1 = tk.Text(self.Frame1_1)
        self.Text1_1.place(relx=0.286, rely=0.216,
                           relheight=0.13, relwidth=0.674)
        self.Text1_1.configure(background="white")
        self.Text1_1.configure(font="TkTextFont")
        self.Text1_1.configure(foreground="black")
        self.Text1_1.configure(highlightbackground="#d9d9d9")
        self.Text1_1.configure(highlightcolor="black")
        self.Text1_1.configure(insertbackground="black")
        self.Text1_1.configure(selectbackground="#c4c4c4")
        self.Text1_1.configure(selectforeground="black")
        self.Text1_1.configure(wrap="word")
        self.Text2_2 = tk.Text(self.Frame1_1)
        self.Text2_2.place(relx=0.286, rely=0.432,
                           relheight=0.13, relwidth=0.674)
        self.Text2_2.configure(background="white")
        self.Text2_2.configure(font="TkTextFont")
        self.Text2_2.configure(foreground="black")
        self.Text2_2.configure(highlightbackground="#d9d9d9")
        self.Text2_2.configure(highlightcolor="black")
        self.Text2_2.configure(insertbackground="black")
        self.Text2_2.configure(selectbackground="#c4c4c4")
        self.Text2_2.configure(selectforeground="black")
        self.Text2_2.configure(wrap="word")
        self.Text2_1_1 = tk.Text(self.Frame1_1)
        self.Text2_1_1.place(relx=0.286, rely=0.649,
                             relheight=0.13, relwidth=0.674)
        self.Text2_1_1.configure(background="white")
        self.Text2_1_1.configure(font="TkTextFont")
        self.Text2_1_1.configure(foreground="black")
        self.Text2_1_1.configure(highlightbackground="#d9d9d9")
        self.Text2_1_1.configure(highlightcolor="black")
        self.Text2_1_1.configure(insertbackground="black")
        self.Text2_1_1.configure(selectbackground="#c4c4c4")
        self.Text2_1_1.configure(selectforeground="black")
        self.Text2_1_1.configure(wrap="word")
        self.Button5_1 = tk.Button(self.top)
        self.Button5_1.place(relx=0.033, rely=0.489, height=24, width=47)
        self.Button5_1.configure(activebackground="beige")
        self.Button5_1.configure(activeforeground="black")
        self.Button5_1.configure(background="#d9d9d9")
        self.Button5_1.configure(compound='left')
        self.Button5_1.configure(disabledforeground="#a3a3a3")
        self.Button5_1.configure(foreground="#000000")
        self.Button5_1.configure(highlightbackground="#d9d9d9")
        self.Button5_1.configure(highlightcolor="black")
        self.Button5_1.configure(pady="0")
        self.Button5_1.configure(command=self.showDetails,text='''Show''')
        self.Button7_1 = tk.Button(self.top)
        self.Button7_1.place(relx=0.217, rely=0.489, height=24, width=47)
        self.Button7_1.configure(activebackground="beige")
        self.Button7_1.configure(activeforeground="black")
        self.Button7_1.configure(background="#d9d9d9")
        self.Button7_1.configure(compound='left')
        self.Button7_1.configure(disabledforeground="#a3a3a3")
        self.Button7_1.configure(foreground="#000000")
        self.Button7_1.configure(highlightbackground="#d9d9d9")
        self.Button7_1.configure(highlightcolor="black")
        self.Button7_1.configure(pady="0")
        self.Button7_1.configure(command=self.addSponsor,text='''Add''')
        self.Button8_1 = tk.Button(self.top)
        self.Button8_1.place(relx=0.383, rely=0.489, height=24, width=47)
        self.Button8_1.configure(activebackground="beige")
        self.Button8_1.configure(activeforeground="black")
        self.Button8_1.configure(background="#d9d9d9")
        self.Button8_1.configure(compound='left')
        self.Button8_1.configure(disabledforeground="#a3a3a3")
        self.Button8_1.configure(foreground="#000000")
        self.Button8_1.configure(highlightbackground="#d9d9d9")
        self.Button8_1.configure(highlightcolor="black")
        self.Button8_1.configure(pady="0")
        self.Button8_1.configure(command=self.deleteSponsor,text='''Delete''')
        self.Button9_1 = tk.Button(self.top)
        self.Button9_1.place(relx=0.917, rely=0.933, height=24, width=47)
        self.Button9_1.configure(activebackground="beige")
        self.Button9_1.configure(activeforeground="black")
        self.Button9_1.configure(background="#d9d9d9")
        self.Button9_1.configure(compound='left')
        self.Button9_1.configure(disabledforeground="#a3a3a3")
        self.Button9_1.configure(foreground="#000000")
        self.Button9_1.configure(highlightbackground="#d9d9d9")
        self.Button9_1.configure(highlightcolor="black")
        self.Button9_1.configure(pady="0")
        self.Button9_1.configure(command=self.top.destroy)
        self.Button9_1.configure(text='''Close''')
        self.Listbox3 = tk.Listbox(self.top)
        self.Listbox3.place(relx=0.017, rely=0.578,
                            relheight=0.404, relwidth=0.89)
        self.Listbox3.configure(background="white")
        self.Listbox3.configure(disabledforeground="#a3a3a3")
        self.Listbox3.configure(font="TkFixedFont")
        self.Listbox3.configure(foreground="#000000")


class Toplevel5_2:
    def showDetails(self):
        self.Listbox4.delete(0,END)
        try:
                dbs_support.cursor.execute("SELECT * FROM vendors")
                dbsresponse = dbs_support.cursor.fetchall()
                self.Listbox4.insert(END,"ID Name Phone Number Booth Location Product Name")
                for row in dbsresponse:
                        self.Listbox4.insert(END,row)
   
        except Exception as e:
                tkMessageBox.showinfo("Error",e)
    
    def deleteVendors(self):
          selection=self.Listbox4.curselection()
          try:
            if len(selection)==0:
                tkMessageBox.showinfo("Error","Please select a vendor")                                                                                    
            else:
                index=selection[0]
                vendor_row=self.Listbox4.get(index)
                vendor_id=str(vendor_row[0])
                dbs_support.cursor.execute("DELETE FROM vendors WHERE id= '"+vendor_id+"' ")
                dbs_support.connc.commit()
                self.showDetails()
                tkMessageBox.showinfo("Success","Vendor deleted successfully")
          except Exception as e:
                tkMessageBox.showinfo("Error",e)

    def addVendor(self):
        name=self.Text2_3.get('1.0','end-1c');
        phone=self.Text2_1_2.get('1.0','end-1c');
        location=self.Text3_1.get('1.0','end-1c');
        product=self.Text4_1.get('1.0','end-1c');
        
        try:
              insQuery="insert into vendors(name,phone_no,booth_location,product_name) values('" + name + "','" + phone + "','" + location + "','" + product + "')"
              dbs_support.cursor.execute(insQuery)
              dbs_support.connc.commit()
              self.showDetails()
        except Exception as e:
              tkMessageBox.showerror("Error",e)


    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("600x450+545+183")
        top.minsize(120, 1)
        top.maxsize(1540, 845)
        top.resizable(1,  1)
        top.title("Vendor Add")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.top = top

        self.Frame1_2 = tk.Frame(self.top)
        self.Frame1_2.place(relx=0.033, rely=0.044,
                            relheight=0.411, relwidth=0.875)
        self.Frame1_2.configure(relief='groove')
        self.Frame1_2.configure(borderwidth="2")
        self.Frame1_2.configure(relief="groove")
        self.Frame1_2.configure(background="#d9d9d9")
        self.Frame1_2.configure(highlightbackground="#d9d9d9")
        self.Frame1_2.configure(highlightcolor="black")
        self.Vendor_name_2 = tk.Label(self.Frame1_2)
        self.Vendor_name_2.place(relx=0.019, rely=0.162, height=17, width=84)
        self.Vendor_name_2.configure(activebackground="#f9f9f9")
        self.Vendor_name_2.configure(anchor='w')
        self.Vendor_name_2.configure(background="#d9d9d9")
        self.Vendor_name_2.configure(compound='left')
        self.Vendor_name_2.configure(disabledforeground="#a3a3a3")
        self.Vendor_name_2.configure(foreground="#000000")
        self.Vendor_name_2.configure(highlightbackground="#d9d9d9")
        self.Vendor_name_2.configure(highlightcolor="black")
        self.Vendor_name_2.configure(text='''Vendor Name''')
        self.vendor_phone = tk.Label(self.Frame1_2)
        self.vendor_phone.place(relx=0.019, rely=0.324, height=17, width=84)
        self.vendor_phone.configure(activebackground="#f9f9f9")
        self.vendor_phone.configure(anchor='w')
        self.vendor_phone.configure(background="#d9d9d9")
        self.vendor_phone.configure(compound='left')
        self.vendor_phone.configure(disabledforeground="#a3a3a3")
        self.vendor_phone.configure(foreground="#000000")
        self.vendor_phone.configure(highlightbackground="#d9d9d9")
        self.vendor_phone.configure(highlightcolor="black")
        self.vendor_phone.configure(text='''Vendor Phone''')
        self.Location_1 = tk.Label(self.Frame1_2)
        self.Location_1.place(relx=0.019, rely=0.486, height=17, width=94)
        self.Location_1.configure(activebackground="#f9f9f9")
        self.Location_1.configure(anchor='w')
        self.Location_1.configure(background="#d9d9d9")
        self.Location_1.configure(compound='left')
        self.Location_1.configure(disabledforeground="#a3a3a3")
        self.Location_1.configure(foreground="#000000")
        self.Location_1.configure(highlightbackground="#d9d9d9")
        self.Location_1.configure(highlightcolor="black")
        self.Location_1.configure(text='''Booth Location''')
        self.Productt_name = tk.Label(self.Frame1_2)
        self.Productt_name.place(relx=0.019, rely=0.649, height=26, width=94)
        self.Productt_name.configure(activebackground="#f9f9f9")
        self.Productt_name.configure(anchor='w')
        self.Productt_name.configure(background="#d9d9d9")
        self.Productt_name.configure(compound='left')
        self.Productt_name.configure(disabledforeground="#a3a3a3")
        self.Productt_name.configure(foreground="#000000")
        self.Productt_name.configure(highlightbackground="#d9d9d9")
        self.Productt_name.configure(highlightcolor="black")
        self.Productt_name.configure(text='''Product Name''')
        self.Text2_3 = tk.Text(self.Frame1_2)
        self.Text2_3.place(relx=0.229, rely=0.162,
                           relheight=0.13, relwidth=0.75)

        self.Text2_3.configure(background="white")
        self.Text2_3.configure(font="TkTextFont")
        self.Text2_3.configure(foreground="black")
        self.Text2_3.configure(highlightbackground="#d9d9d9")
        self.Text2_3.configure(highlightcolor="black")
        self.Text2_3.configure(insertbackground="black")
        self.Text2_3.configure(selectbackground="#c4c4c4")
        self.Text2_3.configure(selectforeground="black")
        self.Text2_3.configure(wrap="word")
        self.Text2_1_2 = tk.Text(self.Frame1_2)
        self.Text2_1_2.place(relx=0.229, rely=0.324,
                             relheight=0.13, relwidth=0.75)
        self.Text2_1_2.configure(background="white")
        self.Text2_1_2.configure(font="TkTextFont")
        self.Text2_1_2.configure(foreground="black")
        self.Text2_1_2.configure(highlightbackground="#d9d9d9")
        self.Text2_1_2.configure(highlightcolor="black")
        self.Text2_1_2.configure(insertbackground="black")
        self.Text2_1_2.configure(selectbackground="#c4c4c4")
        self.Text2_1_2.configure(selectforeground="black")
        self.Text2_1_2.configure(wrap="word")
        self.Text3_1 = tk.Text(self.Frame1_2)
        self.Text3_1.place(relx=0.229, rely=0.486,
                           relheight=0.13, relwidth=0.75)

        self.Text3_1.configure(background="white")
        self.Text3_1.configure(font="TkTextFont")
        self.Text3_1.configure(foreground="black")
        self.Text3_1.configure(highlightbackground="#d9d9d9")
        self.Text3_1.configure(highlightcolor="black")
        self.Text3_1.configure(insertbackground="black")
        self.Text3_1.configure(selectbackground="#c4c4c4")
        self.Text3_1.configure(selectforeground="black")
        self.Text3_1.configure(wrap="word")
        self.Text4_1 = tk.Text(self.Frame1_2)
        self.Text4_1.place(relx=0.229, rely=0.649,
                           relheight=0.13, relwidth=0.75)

        self.Text4_1.configure(background="white")
        self.Text4_1.configure(font="TkTextFont")
        self.Text4_1.configure(foreground="black")
        self.Text4_1.configure(highlightbackground="#d9d9d9")
        self.Text4_1.configure(highlightcolor="black")
        self.Text4_1.configure(insertbackground="black")
        self.Text4_1.configure(selectbackground="#c4c4c4")
        self.Text4_1.configure(selectforeground="black")
        self.Text4_1.configure(wrap="word")
        self.Button5_2 = tk.Button(self.top)
        self.Button5_2.place(relx=0.033, rely=0.489, height=24, width=47)
        self.Button5_2.configure(activebackground="beige")
        self.Button5_2.configure(activeforeground="black")
        self.Button5_2.configure(background="#d9d9d9")
        self.Button5_2.configure(compound='left')
        self.Button5_2.configure(disabledforeground="#a3a3a3")
        self.Button5_2.configure(foreground="#000000")
        self.Button5_2.configure(highlightbackground="#d9d9d9")
        self.Button5_2.configure(highlightcolor="black")
        self.Button5_2.configure(pady="0")
        self.Button5_2.configure(command=self.showDetails,text='''Show''')
        self.Button7_2 = tk.Button(self.top)
        self.Button7_2.place(relx=0.217, rely=0.489, height=24, width=47)
        self.Button7_2.configure(activebackground="beige")
        self.Button7_2.configure(activeforeground="black")
        self.Button7_2.configure(background="#d9d9d9")
        self.Button7_2.configure(compound='left')
        self.Button7_2.configure(disabledforeground="#a3a3a3")
        self.Button7_2.configure(foreground="#000000")
        self.Button7_2.configure(highlightbackground="#d9d9d9")
        self.Button7_2.configure(highlightcolor="black")
        self.Button7_2.configure(pady="0")
        self.Button7_2.configure(command=self.addVendor,text='''Add''')
        self.Button8_2 = tk.Button(self.top)
        self.Button8_2.place(relx=0.383, rely=0.489, height=24, width=47)
        self.Button8_2.configure(activebackground="beige")
        self.Button8_2.configure(activeforeground="black")
        self.Button8_2.configure(background="#d9d9d9")
        self.Button8_2.configure(compound='left')
        self.Button8_2.configure(disabledforeground="#a3a3a3")
        self.Button8_2.configure(foreground="#000000")
        self.Button8_2.configure(highlightbackground="#d9d9d9")
        self.Button8_2.configure(highlightcolor="black")
        self.Button8_2.configure(pady="0")
        self.Button8_2.configure(command=self.deleteVendors,text='''Delete''')
        self.Button9_2 = tk.Button(self.top)
        self.Button9_2.place(relx=0.917, rely=0.933, height=24, width=47)
        self.Button9_2.configure(activebackground="beige")
        self.Button9_2.configure(activeforeground="black")
        self.Button9_2.configure(background="#d9d9d9")
        self.Button9_2.configure(compound='left')
        self.Button9_2.configure(disabledforeground="#a3a3a3")
        self.Button9_2.configure(foreground="#000000")
        self.Button9_2.configure(highlightbackground="#d9d9d9")
        self.Button9_2.configure(highlightcolor="black")
        self.Button9_2.configure(pady="0")
        self.Button9_2.configure(command=self.top.destroy)
        self.Button9_2.configure(text='''Close''')
        self.Listbox4 = tk.Listbox(self.top)
        self.Listbox4.place(relx=0.017, rely=0.556,
                            relheight=0.427, relwidth=0.89)
        self.Listbox4.configure(background="white")
        self.Listbox4.configure(disabledforeground="#a3a3a3")
        self.Listbox4.configure(font="TkFixedFont")
        self.Listbox4.configure(foreground="#000000")


class Toplevel5_3:
    def showDetails(self):
        self.Listbox5.delete(0,END)
        try:
                dbs_support.cursor.execute("SELECT * FROM performers")
                dbsresponse = dbs_support.cursor.fetchall()
                self.Listbox5.insert(END,"ID Name Genre Date Time")
                for row in dbsresponse:
                        self.Listbox5.insert(END,row)
   
        except Exception as e:
                tkMessageBox.showinfo("Error",e)
    def addPerformer(self):
        performer_name=self.Text1_2.get('1.0','end-1c');
        time=(self.Text2_4.get('1.0','end-1c'));
        date=self.Text2_1_3.get('1.0','end-1c');
        genre=self.Text3_2.get('1.0','end-1c');
        event_name=self.Text4_2.get('1.0','end-1c');
        
        try:          
            dbs_support.cursor.callproc('add_performers', (performer_name, genre,time,date,event_name))
            dbs_support.connc.commit()
            self.showDetails()
        except Exception as e:
              tkMessageBox.showerror("Error",e)

    def deletePerformer(self):
          selection=self.Listbox5.curselection()
          try:
            if len(selection)==0:
                tkMessageBox.showinfo("Error","Please select a performer")                                                                                    
            else:
                index=selection[0]
                performer_row=self.Listbox5.get(index)
                performer_id=str(performer_row[0])
                dbs_support.cursor.execute("DELETE FROM performers WHERE id= '"+performer_id+"' ")
                dbs_support.connc.commit()
                self.showDetails()
                tkMessageBox.showinfo("Success","Performer deleted successfully")
          except Exception as e:
                tkMessageBox.showinfo("Error",e)

    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("600x450+474+279")
        top.minsize(120, 1)
        top.maxsize(1540, 845)
        top.resizable(1,  1)
        top.title("Performer add")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.top = top

        self.Frame1_3 = tk.Frame(self.top)
        self.Frame1_3.place(relx=0.033, rely=0.044,
                            relheight=0.411, relwidth=0.875)
        self.Frame1_3.configure(relief='groove')
        self.Frame1_3.configure(borderwidth="2")
        self.Frame1_3.configure(relief="groove")
        self.Frame1_3.configure(background="#d9d9d9")
        self.Frame1_3.configure(highlightbackground="#d9d9d9")
        self.Frame1_3.configure(highlightcolor="black")
        self.performance_time_1 = tk.Label(self.Frame1_3)
        self.performance_time_1.place(
            relx=0.019, rely=0.216, height=26, width=104)
        self.performance_time_1.configure(activebackground="#f9f9f9")
        self.performance_time_1.configure(anchor='w')
        self.performance_time_1.configure(background="#d9d9d9")
        self.performance_time_1.configure(compound='left')
        self.performance_time_1.configure(disabledforeground="#a3a3a3")
        self.performance_time_1.configure(foreground="#000000")
        self.performance_time_1.configure(highlightbackground="#d9d9d9")
        self.performance_time_1.configure(highlightcolor="black")
        self.performance_time_1.configure(text='''Performance time''')
        self.Performer_name_1 = tk.Label(self.Frame1_3)
        self.Performer_name_1.place(
            relx=0.019, rely=0.054, height=17, width=104)

        self.Performer_name_1.configure(activebackground="#f9f9f9")
        self.Performer_name_1.configure(anchor='w')
        self.Performer_name_1.configure(background="#d9d9d9")
        self.Performer_name_1.configure(compound='left')
        self.Performer_name_1.configure(disabledforeground="#a3a3a3")
        self.Performer_name_1.configure(foreground="#000000")
        self.Performer_name_1.configure(highlightbackground="#d9d9d9")
        self.Performer_name_1.configure(highlightcolor="black")
        self.Performer_name_1.configure(text='''Performer Name''')
        self.Data_1 = tk.Label(self.Frame1_3)
        self.Data_1.place(relx=0.019, rely=0.378, height=17, width=104)
        self.Data_1.configure(activebackground="#f9f9f9")
        self.Data_1.configure(anchor='w')
        self.Data_1.configure(background="#d9d9d9")
        self.Data_1.configure(compound='left')
        self.Data_1.configure(cursor="fleur")
        self.Data_1.configure(disabledforeground="#a3a3a3")
        self.Data_1.configure(foreground="#000000")
        self.Data_1.configure(highlightbackground="#d9d9d9")
        self.Data_1.configure(highlightcolor="black")
        self.Data_1.configure(text='''Performance Date''')
        self.Genre = tk.Label(self.Frame1_3)
        self.Genre.place(relx=0.019, rely=0.541, height=17, width=64)
        self.Genre.configure(activebackground="#f9f9f9")
        self.Genre.configure(anchor='w')
        self.Genre.configure(background="#d9d9d9")
        self.Genre.configure(compound='left')
        self.Genre.configure(disabledforeground="#a3a3a3")
        self.Genre.configure(foreground="#000000")
        self.Genre.configure(highlightbackground="#d9d9d9")
        self.Genre.configure(highlightcolor="black")
        self.Genre.configure(text='''Genre''')
        self.tickets_1 = tk.Label(self.Frame1_3)
        self.tickets_1.place(relx=0.019, rely=0.703, height=26, width=74)
        self.tickets_1.configure(activebackground="#f9f9f9")
        self.tickets_1.configure(anchor='w')
        self.tickets_1.configure(background="#d9d9d9")
        self.tickets_1.configure(compound='left')
        self.tickets_1.configure(disabledforeground="#a3a3a3")
        self.tickets_1.configure(foreground="#000000")
        self.tickets_1.configure(highlightbackground="#d9d9d9")
        self.tickets_1.configure(highlightcolor="black")
        self.tickets_1.configure(text='''Event Name''')
        self.Text1_2 = tk.Text(self.Frame1_3)
        self.Text1_2.place(relx=0.229, rely=0.054,
                           relheight=0.13, relwidth=0.674)
        self.Text1_2.configure(background="white")
        self.Text1_2.configure(font="TkTextFont")
        self.Text1_2.configure(foreground="black")
        self.Text1_2.configure(highlightbackground="#d9d9d9")
        self.Text1_2.configure(highlightcolor="black")
        self.Text1_2.configure(insertbackground="black")
        self.Text1_2.configure(selectbackground="#c4c4c4")
        self.Text1_2.configure(selectforeground="black")
        self.Text1_2.configure(wrap="word")
        self.Text2_4 = tk.Text(self.Frame1_3)
        self.Text2_4.place(relx=0.229, rely=0.216,
                           relheight=0.13, relwidth=0.674)
        self.Text2_4.configure(background="white")
        self.Text2_4.configure(font="TkTextFont")
        self.Text2_4.configure(foreground="black")
        self.Text2_4.configure(highlightbackground="#d9d9d9")
        self.Text2_4.configure(highlightcolor="black")
        self.Text2_4.configure(insertbackground="black")
        self.Text2_4.configure(selectbackground="#c4c4c4")
        self.Text2_4.configure(selectforeground="black")
        self.Text2_4.configure(wrap="word")
        self.Text2_1_3 = tk.Text(self.Frame1_3)
        self.Text2_1_3.place(relx=0.229, rely=0.378,
                             relheight=0.13, relwidth=0.674)
        self.Text2_1_3.configure(background="white")
        self.Text2_1_3.configure(font="TkTextFont")
        self.Text2_1_3.configure(foreground="black")
        self.Text2_1_3.configure(highlightbackground="#d9d9d9")
        self.Text2_1_3.configure(highlightcolor="black")
        self.Text2_1_3.configure(insertbackground="black")
        self.Text2_1_3.configure(selectbackground="#c4c4c4")
        self.Text2_1_3.configure(selectforeground="black")
        self.Text2_1_3.configure(wrap="word")
        self.Text3_2 = tk.Text(self.Frame1_3)
        self.Text3_2.place(relx=0.229, rely=0.541,
                           relheight=0.13, relwidth=0.674)
        self.Text3_2.configure(background="white")
        self.Text3_2.configure(font="TkTextFont")
        self.Text3_2.configure(foreground="black")
        self.Text3_2.configure(highlightbackground="#d9d9d9")
        self.Text3_2.configure(highlightcolor="black")
        self.Text3_2.configure(insertbackground="black")
        self.Text3_2.configure(selectbackground="#c4c4c4")
        self.Text3_2.configure(selectforeground="black")
        self.Text3_2.configure(wrap="word")
        self.Text4_2 = tk.Text(self.Frame1_3)
        self.Text4_2.place(relx=0.229, rely=0.703,
                           relheight=0.13, relwidth=0.674)
        self.Text4_2.configure(background="white")
        self.Text4_2.configure(font="TkTextFont")
        self.Text4_2.configure(foreground="black")
        self.Text4_2.configure(highlightbackground="#d9d9d9")
        self.Text4_2.configure(highlightcolor="black")
        self.Text4_2.configure(insertbackground="black")
        self.Text4_2.configure(selectbackground="#c4c4c4")
        self.Text4_2.configure(selectforeground="black")
        self.Text4_2.configure(wrap="word")
        self.Button5_3 = tk.Button(self.top)
        self.Button5_3.place(relx=0.033, rely=0.489, height=24, width=47)
        self.Button5_3.configure(activebackground="beige")
        self.Button5_3.configure(activeforeground="black")
        self.Button5_3.configure(background="#d9d9d9")
        self.Button5_3.configure(compound='left')
        self.Button5_3.configure(disabledforeground="#a3a3a3")
        self.Button5_3.configure(foreground="#000000")
        self.Button5_3.configure(highlightbackground="#d9d9d9")
        self.Button5_3.configure(highlightcolor="black")
        self.Button5_3.configure(pady="0")
        self.Button5_3.configure(command=self.showDetails,text='''Show''')
        self.Button7_3 = tk.Button(self.top)
        self.Button7_3.place(relx=0.217, rely=0.489, height=24, width=47)
        self.Button7_3.configure(activebackground="beige")
        self.Button7_3.configure(activeforeground="black")
        self.Button7_3.configure(background="#d9d9d9")
        self.Button7_3.configure(compound='left')
        self.Button7_3.configure(disabledforeground="#a3a3a3")
        self.Button7_3.configure(foreground="#000000")
        self.Button7_3.configure(highlightbackground="#d9d9d9")
        self.Button7_3.configure(highlightcolor="black")
        self.Button7_3.configure(pady="0")
        self.Button7_3.configure(command=self.addPerformer,text='''Add''')
        self.Button8_3 = tk.Button(self.top)
        self.Button8_3.place(relx=0.383, rely=0.489, height=24, width=47)
        self.Button8_3.configure(activebackground="beige")
        self.Button8_3.configure(activeforeground="black")
        self.Button8_3.configure(background="#d9d9d9")
        self.Button8_3.configure(compound='left')
        self.Button8_3.configure(disabledforeground="#a3a3a3")
        self.Button8_3.configure(foreground="#000000")
        self.Button8_3.configure(highlightbackground="#d9d9d9")
        self.Button8_3.configure(highlightcolor="black")
        self.Button8_3.configure(pady="0")
        self.Button8_3.configure(command=self.deletePerformer,text='''Delete''')
        self.Button9_3 = tk.Button(self.top)
        self.Button9_3.place(relx=0.917, rely=0.933, height=24, width=47)
        self.Button9_3.configure(activebackground="beige")
        self.Button9_3.configure(activeforeground="black")
        self.Button9_3.configure(background="#d9d9d9")
        self.Button9_3.configure(compound='left')
        self.Button9_3.configure(disabledforeground="#a3a3a3")
        self.Button9_3.configure(foreground="#000000")
        self.Button9_3.configure(highlightbackground="#d9d9d9")
        self.Button9_3.configure(highlightcolor="black")
        self.Button9_3.configure(pady="0")
        self.Button9_3.configure(command=self.top.destroy)
        self.Button9_3.configure(text='''Close''')
        self.Listbox5 = tk.Listbox(self.top)
        self.Listbox5.place(relx=0.033, rely=0.578,
                            relheight=0.404, relwidth=0.873)
        self.Listbox5.configure(background="white")
        self.Listbox5.configure(disabledforeground="#a3a3a3")
        self.Listbox5.configure(font="TkFixedFont")
        self.Listbox5.configure(foreground="#000000")


class Toplevel3:
    def showPerformerDetails(self):
        self.Listbox2.delete(0,END)
        try:
                dbs_support.cursor.execute("SELECT * FROM performers")
                dbsresponse = dbs_support.cursor.fetchall()
                self.Listbox2.insert(END,"ID Name Genre Date Time")
                for row in dbsresponse:
                        self.Listbox2.insert(END,row)
   
        except Exception as e:
                tkMessageBox.showinfo("Error",e) 
    def showEventDetails(self):
        self.Listbox2.delete(0,END)
        try:
                dbs_support.cursor.execute("SELECT * FROM event")
                dbsresponse = dbs_support.cursor.fetchall()
                self.Listbox2.insert(END,"ID Name Date Time Venue Tickets_left")
                for row in dbsresponse:
                        self.Listbox2.insert(END,row)
   
        except Exception as e:
                tkMessageBox.showinfo("Error",e)
    def showSponsorDetails(self):
        self.Listbox2.delete(0,END)
        try:
                dbs_support.cursor.execute("SELECT * FROM sponsors")
                dbsresponse = dbs_support.cursor.fetchall()
                self.Listbox2.insert(END,"ID Name Contributed Amount")
                for row in dbsresponse:
                        self.Listbox2.insert(END,row)
   
        except Exception as e:
                tkMessageBox.showinfo("Error",e)
    def showVendorDetails(self):
        self.Listbox2.delete(0,END)
        try:
                dbs_support.cursor.execute("SELECT * FROM vendors")
                dbsresponse = dbs_support.cursor.fetchall()
                self.Listbox2.insert(END,"ID Name Phone Number Booth Location Product Name")
                for row in dbsresponse:
                        self.Listbox2.insert(END,row)
   
        except Exception as e:
                tkMessageBox.showinfo("Error",e)
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("600x450+483+155")
        top.minsize(120, 1)
        top.maxsize(1540, 845)
        top.resizable(1,  1)
        top.title("User Panel")
        top.configure(background="#d9d9d9")

        self.top = top

        self.Close_userPanel = tk.Button(self.top)
        self.Close_userPanel.place(relx=0.917, rely=0.911, height=24, width=47)
        self.Close_userPanel.configure(activebackground="beige")
        self.Close_userPanel.configure(activeforeground="black")
        self.Close_userPanel.configure(background="#d9d9d9")
        self.Close_userPanel.configure(compound='left')
        self.Close_userPanel.configure(disabledforeground="#a3a3a3")
        self.Close_userPanel.configure(foreground="#000000")
        self.Close_userPanel.configure(highlightbackground="#d9d9d9")
        self.Close_userPanel.configure(highlightcolor="black")
        self.Close_userPanel.configure(pady="0")
        self.Close_userPanel.configure(command=self.top.destroy)
        self.Close_userPanel.configure(text='''Close''')
        self.Frame2 = tk.Frame(self.top)
        self.Frame2.place(relx=0.033, rely=0.022,
                          relheight=0.522, relwidth=0.925)
        self.Frame2.configure(relief='groove')
        self.Frame2.configure(borderwidth="2")
        self.Frame2.configure(relief="groove")
        self.Frame2.configure(background="#d9d9d9")
        self.show_events = tk.Button(self.Frame2)
        self.show_events.place(relx=0.036, rely=0.085, height=24, width=107)
        self.show_events.configure(activebackground="beige")
        self.show_events.configure(activeforeground="black")
        self.show_events.configure(background="#d9d9d9")
        self.show_events.configure(compound='left')
        self.show_events.configure(disabledforeground="#a3a3a3")
        self.show_events.configure(foreground="#000000")
        self.show_events.configure(highlightbackground="#d9d9d9")
        self.show_events.configure(highlightcolor="black")
        self.show_events.configure(pady="0")
        self.show_events.configure(command=self.showEventDetails,text='''Show Events''')
        self.Show_performers = tk.Button(self.Frame2)
        self.Show_performers.place(
            relx=0.036, rely=0.255, height=24, width=107)
        self.Show_performers.configure(activebackground="beige")
        self.Show_performers.configure(activeforeground="black")
        self.Show_performers.configure(background="#d9d9d9")
        self.Show_performers.configure(compound='left')
        self.Show_performers.configure(disabledforeground="#a3a3a3")
        self.Show_performers.configure(foreground="#000000")
        self.Show_performers.configure(highlightbackground="#d9d9d9")
        self.Show_performers.configure(highlightcolor="black")
        self.Show_performers.configure(pady="0")
        self.Show_performers.configure(command=self.showPerformerDetails,text='''Show Performers''')
        self.show_sponsors = tk.Button(self.Frame2)
        self.show_sponsors.place(relx=0.036, rely=0.426, height=24, width=107)
        self.show_sponsors.configure(activebackground="beige")
        self.show_sponsors.configure(activeforeground="black")
        self.show_sponsors.configure(background="#d9d9d9")
        self.show_sponsors.configure(compound='left')
        self.show_sponsors.configure(disabledforeground="#a3a3a3")
        self.show_sponsors.configure(foreground="#000000")
        self.show_sponsors.configure(highlightbackground="#d9d9d9")
        self.show_sponsors.configure(highlightcolor="black")
        self.show_sponsors.configure(pady="0")
        self.show_sponsors.configure(command=self.showSponsorDetails, text='''Show Sponsors''')
        self.Show_vendors = tk.Button(self.Frame2)
        self.Show_vendors.place(relx=0.036, rely=0.596, height=24, width=107)
        self.Show_vendors.configure(activebackground="beige")
        self.Show_vendors.configure(activeforeground="black")
        self.Show_vendors.configure(background="#d9d9d9")
        self.Show_vendors.configure(compound='left')
        self.Show_vendors.configure(disabledforeground="#a3a3a3")
        self.Show_vendors.configure(foreground="#000000")
        self.Show_vendors.configure(highlightbackground="#d9d9d9")
        self.Show_vendors.configure(highlightcolor="black")
        self.Show_vendors.configure(pady="0")
        self.Show_vendors.configure(command=self.showVendorDetails,text='''Show Vendors''')
        self.Book_ticket = tk.Button(self.Frame2)
        self.Book_ticket.place(relx=0.036, rely=0.766, height=24, width=107)
        self.Book_ticket.configure(activebackground="beige")
        self.Book_ticket.configure(activeforeground="black")
        self.Book_ticket.configure(background="#d9d9d9")
        self.Book_ticket.configure(compound='left')
        self.Book_ticket.configure(disabledforeground="#a3a3a3")
        self.Book_ticket.configure(foreground="#000000")
        self.Book_ticket.configure(highlightbackground="#d9d9d9")
        self.Book_ticket.configure(highlightcolor="black")
        self.Book_ticket.configure(command=self.new_ticket_window)
        self.Book_ticket.configure(pady="0")
        self.Book_ticket.configure(text='''Book Ticket''')
        self.Listbox2 = tk.Listbox(self.top)
        self.Listbox2.place(relx=0.033, rely=0.556,
                            relheight=0.427, relwidth=0.873)
        self.Listbox2.configure(background="white")
        self.Listbox2.configure(disabledforeground="#a3a3a3")
        self.Listbox2.configure(font="TkFixedFont")
        self.Listbox2.configure(foreground="#000000")

    def new_ticket_window(self):
        global _top12, _w12
        _top12 = tk.Toplevel(dbs_support.root)
        _w12 = Toplevel5_4(_top12)


class Toplevel5_4:
    def bookTicket(self):
        user_name=self.Text1_3.get('1.0','end-1c');
        user_email=(self.Text2_5.get('1.0','end-1c'));
        event_name=self.Text2_1_4.get('1.0','end-1c');
        
        try:          
            dbs_support.cursor.callproc('add_user', (user_name, user_email,event_name))
            dbs_support.connc.commit()
            tkMessageBox.showinfo("Success","Ticket Booked Successfully")
            
        except Exception as e:
              tkMessageBox.showerror("Error",e)

    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("600x450+465+219")
        top.minsize(120, 1)
        top.maxsize(1540, 845)
        top.resizable(1,  1)
        top.title("Book Ticket")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.top = top

        self.Frame1_4 = tk.Frame(self.top)
        self.Frame1_4.place(relx=0.033, rely=0.044,
                            relheight=0.411, relwidth=0.875)
        self.Frame1_4.configure(relief='groove')
        self.Frame1_4.configure(borderwidth="2")
        self.Frame1_4.configure(relief="groove")
        self.Frame1_4.configure(background="#d9d9d9")
        self.Frame1_4.configure(highlightbackground="#d9d9d9")
        self.Frame1_4.configure(highlightcolor="black")
        self.user_email = tk.Label(self.Frame1_4)
        self.user_email.place(relx=0.019, rely=0.378, height=26, width=64)
        self.user_email.configure(activebackground="#f9f9f9")
        self.user_email.configure(anchor='w')
        self.user_email.configure(background="#d9d9d9")
        self.user_email.configure(compound='left')
        self.user_email.configure(disabledforeground="#a3a3a3")
        self.user_email.configure(foreground="#000000")
        self.user_email.configure(highlightbackground="#d9d9d9")
        self.user_email.configure(highlightcolor="black")
        self.user_email.configure(text='''User Email''')
        self.User_name_1 = tk.Label(self.Frame1_4)
        self.User_name_1.place(relx=0.019, rely=0.108, height=17, width=74)
        self.User_name_1.configure(activebackground="#f9f9f9")
        self.User_name_1.configure(anchor='w')
        self.User_name_1.configure(background="#d9d9d9")
        self.User_name_1.configure(compound='left')
        self.User_name_1.configure(disabledforeground="#a3a3a3")
        self.User_name_1.configure(foreground="#000000")
        self.User_name_1.configure(highlightbackground="#d9d9d9")
        self.User_name_1.configure(highlightcolor="black")
        self.User_name_1.configure(text='''User Name''')
        self.Data_2 = tk.Label(self.Frame1_4)
        self.Data_2.place(relx=0.019, rely=0.649, height=17, width=84)
        self.Data_2.configure(activebackground="#f9f9f9")
        self.Data_2.configure(anchor='w')
        self.Data_2.configure(background="#d9d9d9")
        self.Data_2.configure(compound='left')
        self.Data_2.configure(disabledforeground="#a3a3a3")
        self.Data_2.configure(foreground="#000000")
        self.Data_2.configure(highlightbackground="#d9d9d9")
        self.Data_2.configure(highlightcolor="black")
        self.Data_2.configure(text='''Event Name''')
        self.Text1_3 = tk.Text(self.Frame1_4)
        self.Text1_3.place(relx=0.21, rely=0.108,
                           relheight=0.13, relwidth=0.674)

        self.Text1_3.configure(background="white")
        self.Text1_3.configure(font="TkTextFont")
        self.Text1_3.configure(foreground="black")
        self.Text1_3.configure(highlightbackground="#d9d9d9")
        self.Text1_3.configure(highlightcolor="black")
        self.Text1_3.configure(insertbackground="black")
        self.Text1_3.configure(selectbackground="#c4c4c4")
        self.Text1_3.configure(selectforeground="black")
        self.Text1_3.configure(wrap="word")
        self.Text2_5 = tk.Text(self.Frame1_4)
        self.Text2_5.place(relx=0.21, rely=0.378,
                           relheight=0.13, relwidth=0.674)

        self.Text2_5.configure(background="white")
        self.Text2_5.configure(font="TkTextFont")
        self.Text2_5.configure(foreground="black")
        self.Text2_5.configure(highlightbackground="#d9d9d9")
        self.Text2_5.configure(highlightcolor="black")
        self.Text2_5.configure(insertbackground="black")
        self.Text2_5.configure(selectbackground="#c4c4c4")
        self.Text2_5.configure(selectforeground="black")
        self.Text2_5.configure(wrap="word")
        self.Text2_1_4 = tk.Text(self.Frame1_4)
        self.Text2_1_4.place(relx=0.21, rely=0.649,
                             relheight=0.13, relwidth=0.674)
        self.Text2_1_4.configure(background="white")
        self.Text2_1_4.configure(font="TkTextFont")
        self.Text2_1_4.configure(foreground="black")
        self.Text2_1_4.configure(highlightbackground="#d9d9d9")
        self.Text2_1_4.configure(highlightcolor="black")
        self.Text2_1_4.configure(insertbackground="black")
        self.Text2_1_4.configure(selectbackground="#c4c4c4")
        self.Text2_1_4.configure(selectforeground="black")
        self.Text2_1_4.configure(wrap="word")
        self.Button7_4 = tk.Button(self.top)
        self.Button7_4.place(relx=0.1, rely=0.689, height=64, width=157)
        self.Button7_4.configure(activebackground="beige")
        self.Button7_4.configure(activeforeground="black")
        self.Button7_4.configure(background="#d9d9d9")
        self.Button7_4.configure(compound='left')
        self.Button7_4.configure(disabledforeground="#a3a3a3")
        self.Button7_4.configure(foreground="#000000")
        self.Button7_4.configure(highlightbackground="#d9d9d9")
        self.Button7_4.configure(highlightcolor="black")
        self.Button7_4.configure(pady="0")
        self.Button7_4.configure(command=self.bookTicket,text='''Book Ticket''')
        self.Button9_4 = tk.Button(self.top)
        self.Button9_4.place(relx=0.5, rely=0.689, height=64, width=167)
        self.Button9_4.configure(activebackground="beige")
        self.Button9_4.configure(activeforeground="black")
        self.Button9_4.configure(background="#d9d9d9")
        self.Button9_4.configure(compound='left')
        self.Button9_4.configure(disabledforeground="#a3a3a3")
        self.Button9_4.configure(foreground="#000000")
        self.Button9_4.configure(highlightbackground="#d9d9d9")
        self.Button9_4.configure(highlightcolor="black")
        self.Button9_4.configure(pady="0")
        self.Button9_4.configure(command=self.top.destroy)
        self.Button9_4.configure(text='''Close''')


def start_up():
    dbs_support.main()


if __name__ == '__main__':
    dbs_support.main()
